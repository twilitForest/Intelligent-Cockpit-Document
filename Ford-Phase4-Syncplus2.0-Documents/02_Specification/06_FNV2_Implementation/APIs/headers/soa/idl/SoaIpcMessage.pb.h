// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoaIpcMessage.proto

#ifndef PROTOBUF_SoaIpcMessage_2eproto__INCLUDED
#define PROTOBUF_SoaIpcMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "SoaIpcConnectionOptions.pb.h"  // IWYU pragma: export
#include "SoaMessageWrapper.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_SoaIpcMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaIpcMessageImpl();
void InitDefaultsSoaIpcMessage();
inline void InitDefaults() {
  InitDefaultsSoaIpcMessage();
}
}  // namespace protobuf_SoaIpcMessage_2eproto
namespace fnv {
namespace soa {
namespace gateway {
class SoaIpcMessage;
class SoaIpcMessageDefaultTypeInternal;
extern SoaIpcMessageDefaultTypeInternal _SoaIpcMessage_default_instance_;
}  // namespace gateway
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace gateway {

enum SoaIpcMessage_CommandType {
  SoaIpcMessage_CommandType_PUBLISH = 0,
  SoaIpcMessage_CommandType_SUBSCRIBE = 1,
  SoaIpcMessage_CommandType_UNSUBSCRIBE = 2,
  SoaIpcMessage_CommandType_CONNECT = 3,
  SoaIpcMessage_CommandType_DISCONNECT = 4,
  SoaIpcMessage_CommandType_DATA = 5,
  SoaIpcMessage_CommandType_INVALID = 6,
  SoaIpcMessage_CommandType_CONNECTIONLOST = 7,
  SoaIpcMessage_CommandType_REGISTER_GW = 8,
  SoaIpcMessage_CommandType_DEREGISTER_GW = 9,
  SoaIpcMessage_CommandType_CONNECTREQUEST = 10
};
bool SoaIpcMessage_CommandType_IsValid(int value);
const SoaIpcMessage_CommandType SoaIpcMessage_CommandType_CommandType_MIN = SoaIpcMessage_CommandType_PUBLISH;
const SoaIpcMessage_CommandType SoaIpcMessage_CommandType_CommandType_MAX = SoaIpcMessage_CommandType_CONNECTREQUEST;
const int SoaIpcMessage_CommandType_CommandType_ARRAYSIZE = SoaIpcMessage_CommandType_CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SoaIpcMessage_CommandType_descriptor();
inline const ::std::string& SoaIpcMessage_CommandType_Name(SoaIpcMessage_CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SoaIpcMessage_CommandType_descriptor(), value);
}
inline bool SoaIpcMessage_CommandType_Parse(
    const ::std::string& name, SoaIpcMessage_CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SoaIpcMessage_CommandType>(
    SoaIpcMessage_CommandType_descriptor(), name, value);
}
// ===================================================================

class SoaIpcMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.gateway.SoaIpcMessage) */ {
 public:
  SoaIpcMessage();
  virtual ~SoaIpcMessage();

  SoaIpcMessage(const SoaIpcMessage& from);

  inline SoaIpcMessage& operator=(const SoaIpcMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaIpcMessage(SoaIpcMessage&& from) noexcept
    : SoaIpcMessage() {
    *this = ::std::move(from);
  }

  inline SoaIpcMessage& operator=(SoaIpcMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaIpcMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaIpcMessage* internal_default_instance() {
    return reinterpret_cast<const SoaIpcMessage*>(
               &_SoaIpcMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaIpcMessage* other);
  friend void swap(SoaIpcMessage& a, SoaIpcMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaIpcMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaIpcMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaIpcMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SoaIpcMessage_CommandType CommandType;
  static const CommandType PUBLISH =
    SoaIpcMessage_CommandType_PUBLISH;
  static const CommandType SUBSCRIBE =
    SoaIpcMessage_CommandType_SUBSCRIBE;
  static const CommandType UNSUBSCRIBE =
    SoaIpcMessage_CommandType_UNSUBSCRIBE;
  static const CommandType CONNECT =
    SoaIpcMessage_CommandType_CONNECT;
  static const CommandType DISCONNECT =
    SoaIpcMessage_CommandType_DISCONNECT;
  static const CommandType DATA =
    SoaIpcMessage_CommandType_DATA;
  static const CommandType INVALID =
    SoaIpcMessage_CommandType_INVALID;
  static const CommandType CONNECTIONLOST =
    SoaIpcMessage_CommandType_CONNECTIONLOST;
  static const CommandType REGISTER_GW =
    SoaIpcMessage_CommandType_REGISTER_GW;
  static const CommandType DEREGISTER_GW =
    SoaIpcMessage_CommandType_DEREGISTER_GW;
  static const CommandType CONNECTREQUEST =
    SoaIpcMessage_CommandType_CONNECTREQUEST;
  static inline bool CommandType_IsValid(int value) {
    return SoaIpcMessage_CommandType_IsValid(value);
  }
  static const CommandType CommandType_MIN =
    SoaIpcMessage_CommandType_CommandType_MIN;
  static const CommandType CommandType_MAX =
    SoaIpcMessage_CommandType_CommandType_MAX;
  static const int CommandType_ARRAYSIZE =
    SoaIpcMessage_CommandType_CommandType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandType_descriptor() {
    return SoaIpcMessage_CommandType_descriptor();
  }
  static inline const ::std::string& CommandType_Name(CommandType value) {
    return SoaIpcMessage_CommandType_Name(value);
  }
  static inline bool CommandType_Parse(const ::std::string& name,
      CommandType* value) {
    return SoaIpcMessage_CommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string endpoint = 2;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 2;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // optional string uid = 5;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional .fnv.soa.gateway.SoaMessageWrapper soaMessageWrapper = 3;
  bool has_soamessagewrapper() const;
  void clear_soamessagewrapper();
  static const int kSoaMessageWrapperFieldNumber = 3;
  const ::fnv::soa::gateway::SoaMessageWrapper& soamessagewrapper() const;
  ::fnv::soa::gateway::SoaMessageWrapper* release_soamessagewrapper();
  ::fnv::soa::gateway::SoaMessageWrapper* mutable_soamessagewrapper();
  void set_allocated_soamessagewrapper(::fnv::soa::gateway::SoaMessageWrapper* soamessagewrapper);

  // optional .fnv.soa.gateway.SoaIpcConnectionOptions connectionOptions = 4;
  bool has_connectionoptions() const;
  void clear_connectionoptions();
  static const int kConnectionOptionsFieldNumber = 4;
  const ::fnv::soa::gateway::SoaIpcConnectionOptions& connectionoptions() const;
  ::fnv::soa::gateway::SoaIpcConnectionOptions* release_connectionoptions();
  ::fnv::soa::gateway::SoaIpcConnectionOptions* mutable_connectionoptions();
  void set_allocated_connectionoptions(::fnv::soa::gateway::SoaIpcConnectionOptions* connectionoptions);

  // required .fnv.soa.gateway.SoaIpcMessage.CommandType command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::fnv::soa::gateway::SoaIpcMessage_CommandType command() const;
  void set_command(::fnv::soa::gateway::SoaIpcMessage_CommandType value);

  // optional int32 pid = 6;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 6;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // optional int32 msgId = 7;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 7;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fnv.soa.gateway.SoaIpcMessage)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_soamessagewrapper();
  void clear_has_soamessagewrapper();
  void set_has_connectionoptions();
  void clear_has_connectionoptions();
  void set_has_uid();
  void clear_has_uid();
  void set_has_pid();
  void clear_has_pid();
  void set_has_msgid();
  void clear_has_msgid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::fnv::soa::gateway::SoaMessageWrapper* soamessagewrapper_;
  ::fnv::soa::gateway::SoaIpcConnectionOptions* connectionoptions_;
  int command_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 msgid_;
  friend struct ::protobuf_SoaIpcMessage_2eproto::TableStruct;
  friend void ::protobuf_SoaIpcMessage_2eproto::InitDefaultsSoaIpcMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaIpcMessage

// required .fnv.soa.gateway.SoaIpcMessage.CommandType command = 1;
inline bool SoaIpcMessage::has_command() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoaIpcMessage::set_has_command() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoaIpcMessage::clear_has_command() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoaIpcMessage::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::fnv::soa::gateway::SoaIpcMessage_CommandType SoaIpcMessage::command() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.command)
  return static_cast< ::fnv::soa::gateway::SoaIpcMessage_CommandType >(command_);
}
inline void SoaIpcMessage::set_command(::fnv::soa::gateway::SoaIpcMessage_CommandType value) {
  assert(::fnv::soa::gateway::SoaIpcMessage_CommandType_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcMessage.command)
}

// optional string endpoint = 2;
inline bool SoaIpcMessage::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaIpcMessage::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaIpcMessage::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaIpcMessage::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& SoaIpcMessage::endpoint() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.endpoint)
  return endpoint_.GetNoArena();
}
inline void SoaIpcMessage::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcMessage.endpoint)
}
#if LANG_CXX11
inline void SoaIpcMessage::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaIpcMessage.endpoint)
}
#endif
inline void SoaIpcMessage::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaIpcMessage.endpoint)
}
inline void SoaIpcMessage::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaIpcMessage.endpoint)
}
inline ::std::string* SoaIpcMessage::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcMessage.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaIpcMessage::release_endpoint() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcMessage.endpoint)
  clear_has_endpoint();
  return endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaIpcMessage::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcMessage.endpoint)
}

// optional .fnv.soa.gateway.SoaMessageWrapper soaMessageWrapper = 3;
inline bool SoaIpcMessage::has_soamessagewrapper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoaIpcMessage::set_has_soamessagewrapper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoaIpcMessage::clear_has_soamessagewrapper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::fnv::soa::gateway::SoaMessageWrapper& SoaIpcMessage::soamessagewrapper() const {
  const ::fnv::soa::gateway::SoaMessageWrapper* p = soamessagewrapper_;
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.soaMessageWrapper)
  return p != NULL ? *p : *reinterpret_cast<const ::fnv::soa::gateway::SoaMessageWrapper*>(
      &::fnv::soa::gateway::_SoaMessageWrapper_default_instance_);
}
inline ::fnv::soa::gateway::SoaMessageWrapper* SoaIpcMessage::release_soamessagewrapper() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcMessage.soaMessageWrapper)
  clear_has_soamessagewrapper();
  ::fnv::soa::gateway::SoaMessageWrapper* temp = soamessagewrapper_;
  soamessagewrapper_ = NULL;
  return temp;
}
inline ::fnv::soa::gateway::SoaMessageWrapper* SoaIpcMessage::mutable_soamessagewrapper() {
  set_has_soamessagewrapper();
  if (soamessagewrapper_ == NULL) {
    soamessagewrapper_ = new ::fnv::soa::gateway::SoaMessageWrapper;
  }
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcMessage.soaMessageWrapper)
  return soamessagewrapper_;
}
inline void SoaIpcMessage::set_allocated_soamessagewrapper(::fnv::soa::gateway::SoaMessageWrapper* soamessagewrapper) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(soamessagewrapper_);
  }
  if (soamessagewrapper) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      soamessagewrapper = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, soamessagewrapper, submessage_arena);
    }
    set_has_soamessagewrapper();
  } else {
    clear_has_soamessagewrapper();
  }
  soamessagewrapper_ = soamessagewrapper;
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcMessage.soaMessageWrapper)
}

// optional .fnv.soa.gateway.SoaIpcConnectionOptions connectionOptions = 4;
inline bool SoaIpcMessage::has_connectionoptions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoaIpcMessage::set_has_connectionoptions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoaIpcMessage::clear_has_connectionoptions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::fnv::soa::gateway::SoaIpcConnectionOptions& SoaIpcMessage::connectionoptions() const {
  const ::fnv::soa::gateway::SoaIpcConnectionOptions* p = connectionoptions_;
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.connectionOptions)
  return p != NULL ? *p : *reinterpret_cast<const ::fnv::soa::gateway::SoaIpcConnectionOptions*>(
      &::fnv::soa::gateway::_SoaIpcConnectionOptions_default_instance_);
}
inline ::fnv::soa::gateway::SoaIpcConnectionOptions* SoaIpcMessage::release_connectionoptions() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcMessage.connectionOptions)
  clear_has_connectionoptions();
  ::fnv::soa::gateway::SoaIpcConnectionOptions* temp = connectionoptions_;
  connectionoptions_ = NULL;
  return temp;
}
inline ::fnv::soa::gateway::SoaIpcConnectionOptions* SoaIpcMessage::mutable_connectionoptions() {
  set_has_connectionoptions();
  if (connectionoptions_ == NULL) {
    connectionoptions_ = new ::fnv::soa::gateway::SoaIpcConnectionOptions;
  }
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcMessage.connectionOptions)
  return connectionoptions_;
}
inline void SoaIpcMessage::set_allocated_connectionoptions(::fnv::soa::gateway::SoaIpcConnectionOptions* connectionoptions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connectionoptions_);
  }
  if (connectionoptions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connectionoptions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connectionoptions, submessage_arena);
    }
    set_has_connectionoptions();
  } else {
    clear_has_connectionoptions();
  }
  connectionoptions_ = connectionoptions;
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcMessage.connectionOptions)
}

// optional string uid = 5;
inline bool SoaIpcMessage::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoaIpcMessage::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoaIpcMessage::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoaIpcMessage::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& SoaIpcMessage::uid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.uid)
  return uid_.GetNoArena();
}
inline void SoaIpcMessage::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcMessage.uid)
}
#if LANG_CXX11
inline void SoaIpcMessage::set_uid(::std::string&& value) {
  set_has_uid();
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaIpcMessage.uid)
}
#endif
inline void SoaIpcMessage::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaIpcMessage.uid)
}
inline void SoaIpcMessage::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaIpcMessage.uid)
}
inline ::std::string* SoaIpcMessage::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcMessage.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaIpcMessage::release_uid() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcMessage.uid)
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaIpcMessage::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcMessage.uid)
}

// optional int32 pid = 6;
inline bool SoaIpcMessage::has_pid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoaIpcMessage::set_has_pid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoaIpcMessage::clear_has_pid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoaIpcMessage::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 SoaIpcMessage::pid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.pid)
  return pid_;
}
inline void SoaIpcMessage::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcMessage.pid)
}

// optional int32 msgId = 7;
inline bool SoaIpcMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoaIpcMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoaIpcMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoaIpcMessage::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 SoaIpcMessage::msgid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcMessage.msgId)
  return msgid_;
}
inline void SoaIpcMessage::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcMessage.msgId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace soa
}  // namespace fnv

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fnv::soa::gateway::SoaIpcMessage_CommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fnv::soa::gateway::SoaIpcMessage_CommandType>() {
  return ::fnv::soa::gateway::SoaIpcMessage_CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SoaIpcMessage_2eproto__INCLUDED
