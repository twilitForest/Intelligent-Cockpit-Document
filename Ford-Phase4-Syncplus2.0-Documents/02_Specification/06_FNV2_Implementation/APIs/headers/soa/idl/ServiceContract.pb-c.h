/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ServiceContract.proto */

#ifndef PROTOBUF_C_ServiceContract_2eproto__INCLUDED
#define PROTOBUF_C_ServiceContract_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "Endpoint.pb-c.h"

typedef struct _Fnv__Soa__Framework__Protobuf__ServiceContract Fnv__Soa__Framework__Protobuf__ServiceContract;


/* --- enums --- */


/* --- messages --- */

/*
 **
 * @fnv_message_proto
 * @fnv_deprecated
 */
struct  _Fnv__Soa__Framework__Protobuf__ServiceContract
{
  ProtobufCMessage base;
  /*
   * Service endpoint. The endpoint to be used by consumers to deliver service requests.
   */
  Fnv__Soa__Framework__Protobuf__Endpoint *endpoint;
  /*
   * Current service version.
   */
  char *version;
  /*
   * Endpoint of real MQTT client hosting the service.
   */
  Fnv__Soa__Framework__Protobuf__Endpoint *hostendpoint;
  /*
   * List of commands the service can handle
   */
  size_t n_commandid;
  char **commandid;
  /*
   * List of ftcp commands the service can handle
   */
  size_t n_ftcpcommandid;
  char **ftcpcommandid;
};
#define FNV__SOA__FRAMEWORK__PROTOBUF__SERVICE_CONTRACT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fnv__soa__framework__protobuf__service_contract__descriptor) \
    , NULL, NULL, NULL, 0,NULL, 0,NULL }


/* Fnv__Soa__Framework__Protobuf__ServiceContract methods */
void   fnv__soa__framework__protobuf__service_contract__init
                     (Fnv__Soa__Framework__Protobuf__ServiceContract         *message);
size_t fnv__soa__framework__protobuf__service_contract__get_packed_size
                     (const Fnv__Soa__Framework__Protobuf__ServiceContract   *message);
size_t fnv__soa__framework__protobuf__service_contract__pack
                     (const Fnv__Soa__Framework__Protobuf__ServiceContract   *message,
                      uint8_t             *out);
size_t fnv__soa__framework__protobuf__service_contract__pack_to_buffer
                     (const Fnv__Soa__Framework__Protobuf__ServiceContract   *message,
                      ProtobufCBuffer     *buffer);
Fnv__Soa__Framework__Protobuf__ServiceContract *
       fnv__soa__framework__protobuf__service_contract__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fnv__soa__framework__protobuf__service_contract__free_unpacked
                     (Fnv__Soa__Framework__Protobuf__ServiceContract *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fnv__Soa__Framework__Protobuf__ServiceContract_Closure)
                 (const Fnv__Soa__Framework__Protobuf__ServiceContract *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fnv__soa__framework__protobuf__service_contract__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ServiceContract_2eproto__INCLUDED */
