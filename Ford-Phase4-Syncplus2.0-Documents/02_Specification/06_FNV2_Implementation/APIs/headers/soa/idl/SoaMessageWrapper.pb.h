// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoaMessageWrapper.proto

#ifndef PROTOBUF_SoaMessageWrapper_2eproto__INCLUDED
#define PROTOBUF_SoaMessageWrapper_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SoaMessageWrapper_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaMessageWrapperImpl();
void InitDefaultsSoaMessageWrapper();
inline void InitDefaults() {
  InitDefaultsSoaMessageWrapper();
}
}  // namespace protobuf_SoaMessageWrapper_2eproto
namespace fnv {
namespace soa {
namespace gateway {
class SoaMessageWrapper;
class SoaMessageWrapperDefaultTypeInternal;
extern SoaMessageWrapperDefaultTypeInternal _SoaMessageWrapper_default_instance_;
}  // namespace gateway
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace gateway {

// ===================================================================

class SoaMessageWrapper : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.gateway.SoaMessageWrapper) */ {
 public:
  SoaMessageWrapper();
  virtual ~SoaMessageWrapper();

  SoaMessageWrapper(const SoaMessageWrapper& from);

  inline SoaMessageWrapper& operator=(const SoaMessageWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaMessageWrapper(SoaMessageWrapper&& from) noexcept
    : SoaMessageWrapper() {
    *this = ::std::move(from);
  }

  inline SoaMessageWrapper& operator=(SoaMessageWrapper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaMessageWrapper& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaMessageWrapper* internal_default_instance() {
    return reinterpret_cast<const SoaMessageWrapper*>(
               &_SoaMessageWrapper_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaMessageWrapper* other);
  friend void swap(SoaMessageWrapper& a, SoaMessageWrapper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaMessageWrapper* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaMessageWrapper* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaMessageWrapper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes SoaMessage = 1;
  bool has_soamessage() const;
  void clear_soamessage();
  static const int kSoaMessageFieldNumber = 1;
  const ::std::string& soamessage() const;
  void set_soamessage(const ::std::string& value);
  #if LANG_CXX11
  void set_soamessage(::std::string&& value);
  #endif
  void set_soamessage(const char* value);
  void set_soamessage(const void* value, size_t size);
  ::std::string* mutable_soamessage();
  ::std::string* release_soamessage();
  void set_allocated_soamessage(::std::string* soamessage);

  // @@protoc_insertion_point(class_scope:fnv.soa.gateway.SoaMessageWrapper)
 private:
  void set_has_soamessage();
  void clear_has_soamessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr soamessage_;
  friend struct ::protobuf_SoaMessageWrapper_2eproto::TableStruct;
  friend void ::protobuf_SoaMessageWrapper_2eproto::InitDefaultsSoaMessageWrapperImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaMessageWrapper

// required bytes SoaMessage = 1;
inline bool SoaMessageWrapper::has_soamessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaMessageWrapper::set_has_soamessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaMessageWrapper::clear_has_soamessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaMessageWrapper::clear_soamessage() {
  soamessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_soamessage();
}
inline const ::std::string& SoaMessageWrapper::soamessage() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
  return soamessage_.GetNoArena();
}
inline void SoaMessageWrapper::set_soamessage(const ::std::string& value) {
  set_has_soamessage();
  soamessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
}
#if LANG_CXX11
inline void SoaMessageWrapper::set_soamessage(::std::string&& value) {
  set_has_soamessage();
  soamessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
}
#endif
inline void SoaMessageWrapper::set_soamessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_soamessage();
  soamessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
}
inline void SoaMessageWrapper::set_soamessage(const void* value, size_t size) {
  set_has_soamessage();
  soamessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
}
inline ::std::string* SoaMessageWrapper::mutable_soamessage() {
  set_has_soamessage();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
  return soamessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaMessageWrapper::release_soamessage() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
  clear_has_soamessage();
  return soamessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaMessageWrapper::set_allocated_soamessage(::std::string* soamessage) {
  if (soamessage != NULL) {
    set_has_soamessage();
  } else {
    clear_has_soamessage();
  }
  soamessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soamessage);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaMessageWrapper.SoaMessage)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace soa
}  // namespace fnv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SoaMessageWrapper_2eproto__INCLUDED
