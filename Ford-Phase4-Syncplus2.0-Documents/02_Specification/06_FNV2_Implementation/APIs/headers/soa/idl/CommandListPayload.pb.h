// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommandListPayload.proto

#ifndef PROTOBUF_CommandListPayload_2eproto__INCLUDED
#define PROTOBUF_CommandListPayload_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "soa_service_manager_info.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_CommandListPayload_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCommandListPayloadProtoImpl();
void InitDefaultsCommandListPayloadProto();
inline void InitDefaults() {
  InitDefaultsCommandListPayloadProto();
}
}  // namespace protobuf_CommandListPayload_2eproto
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {
class CommandListPayloadProto;
class CommandListPayloadProtoDefaultTypeInternal;
extern CommandListPayloadProtoDefaultTypeInternal _CommandListPayloadProto_default_instance_;
}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {

// ===================================================================

class CommandListPayloadProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.framework.protobuf.CommandListPayloadProto) */ {
 public:
  CommandListPayloadProto();
  virtual ~CommandListPayloadProto();

  CommandListPayloadProto(const CommandListPayloadProto& from);

  inline CommandListPayloadProto& operator=(const CommandListPayloadProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandListPayloadProto(CommandListPayloadProto&& from) noexcept
    : CommandListPayloadProto() {
    *this = ::std::move(from);
  }

  inline CommandListPayloadProto& operator=(CommandListPayloadProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandListPayloadProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandListPayloadProto* internal_default_instance() {
    return reinterpret_cast<const CommandListPayloadProto*>(
               &_CommandListPayloadProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CommandListPayloadProto* other);
  friend void swap(CommandListPayloadProto& a, CommandListPayloadProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandListPayloadProto* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandListPayloadProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandListPayloadProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string commands = 1;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 1;
  const ::std::string& commands(int index) const;
  ::std::string* mutable_commands(int index);
  void set_commands(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_commands(int index, ::std::string&& value);
  #endif
  void set_commands(int index, const char* value);
  void set_commands(int index, const char* value, size_t size);
  ::std::string* add_commands();
  void add_commands(const ::std::string& value);
  #if LANG_CXX11
  void add_commands(::std::string&& value);
  #endif
  void add_commands(const char* value);
  void add_commands(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& commands() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_commands();

  // optional .fnv.soa.framework.protobuf.__ApiVersion __api_version = 10;
  bool has___api_version() const;
  void clear___api_version();
  static const int kApiVersionFieldNumber = 10;
  const ::fnv::soa::framework::protobuf::__ApiVersion& __api_version() const;
  ::fnv::soa::framework::protobuf::__ApiVersion* release___api_version();
  ::fnv::soa::framework::protobuf::__ApiVersion* mutable___api_version();
  void set_allocated___api_version(::fnv::soa::framework::protobuf::__ApiVersion* __api_version);

  // @@protoc_insertion_point(class_scope:fnv.soa.framework.protobuf.CommandListPayloadProto)
 private:
  void set_has___api_version();
  void clear_has___api_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> commands_;
  ::fnv::soa::framework::protobuf::__ApiVersion* __api_version_;
  friend struct ::protobuf_CommandListPayload_2eproto::TableStruct;
  friend void ::protobuf_CommandListPayload_2eproto::InitDefaultsCommandListPayloadProtoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommandListPayloadProto

// repeated string commands = 1;
inline int CommandListPayloadProto::commands_size() const {
  return commands_.size();
}
inline void CommandListPayloadProto::clear_commands() {
  commands_.Clear();
}
inline const ::std::string& CommandListPayloadProto::commands(int index) const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  return commands_.Get(index);
}
inline ::std::string* CommandListPayloadProto::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  return commands_.Mutable(index);
}
inline void CommandListPayloadProto::set_commands(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  commands_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CommandListPayloadProto::set_commands(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  commands_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CommandListPayloadProto::set_commands(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
inline void CommandListPayloadProto::set_commands(int index, const char* value, size_t size) {
  commands_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
inline ::std::string* CommandListPayloadProto::add_commands() {
  // @@protoc_insertion_point(field_add_mutable:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  return commands_.Add();
}
inline void CommandListPayloadProto::add_commands(const ::std::string& value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
#if LANG_CXX11
inline void CommandListPayloadProto::add_commands(::std::string&& value) {
  commands_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
#endif
inline void CommandListPayloadProto::add_commands(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
inline void CommandListPayloadProto::add_commands(const char* value, size_t size) {
  commands_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandListPayloadProto::commands() const {
  // @@protoc_insertion_point(field_list:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  return commands_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandListPayloadProto::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:fnv.soa.framework.protobuf.CommandListPayloadProto.commands)
  return &commands_;
}

// optional .fnv.soa.framework.protobuf.__ApiVersion __api_version = 10;
inline bool CommandListPayloadProto::has___api_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandListPayloadProto::set_has___api_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandListPayloadProto::clear_has___api_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::fnv::soa::framework::protobuf::__ApiVersion& CommandListPayloadProto::__api_version() const {
  const ::fnv::soa::framework::protobuf::__ApiVersion* p = __api_version_;
  // @@protoc_insertion_point(field_get:fnv.soa.framework.protobuf.CommandListPayloadProto.__api_version)
  return p != NULL ? *p : *reinterpret_cast<const ::fnv::soa::framework::protobuf::__ApiVersion*>(
      &::fnv::soa::framework::protobuf::___ApiVersion_default_instance_);
}
inline ::fnv::soa::framework::protobuf::__ApiVersion* CommandListPayloadProto::release___api_version() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.protobuf.CommandListPayloadProto.__api_version)
  clear_has___api_version();
  ::fnv::soa::framework::protobuf::__ApiVersion* temp = __api_version_;
  __api_version_ = NULL;
  return temp;
}
inline ::fnv::soa::framework::protobuf::__ApiVersion* CommandListPayloadProto::mutable___api_version() {
  set_has___api_version();
  if (__api_version_ == NULL) {
    __api_version_ = new ::fnv::soa::framework::protobuf::__ApiVersion;
  }
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.protobuf.CommandListPayloadProto.__api_version)
  return __api_version_;
}
inline void CommandListPayloadProto::set_allocated___api_version(::fnv::soa::framework::protobuf::__ApiVersion* __api_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(__api_version_);
  }
  if (__api_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      __api_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, __api_version, submessage_arena);
    }
    set_has___api_version();
  } else {
    clear_has___api_version();
  }
  __api_version_ = __api_version;
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.protobuf.CommandListPayloadProto.__api_version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommandListPayload_2eproto__INCLUDED
