/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: update_service_status_result_public.proto */

#ifndef PROTOBUF_C_update_5fservice_5fstatus_5fresult_5fpublic_2eproto__INCLUDED
#define PROTOBUF_C_update_5fservice_5fstatus_5fresult_5fpublic_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "Endpoint.pb-c.h"
#include "soa_service_status.pb-c.h"

typedef struct _Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto;


/* --- enums --- */

typedef enum _Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto__ActionStatus {
  FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS__OK = 1,
  FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS__ERROR_UNKNOWN_ERROR = 2,
  FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS__ERROR_SERVICE_NOT_REGISTERED = 3,
  FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS__ERROR_PERMISSION_DENIED = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS)
} Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto__ActionStatus;

/* --- messages --- */

/*
 **
 * @fnv_message_proto
 * @fnv_deprecated
 */
struct  _Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto
{
  ProtobufCMessage base;
  Fnv__Soa__Framework__Protobuf__Endpoint *serviceendpoint;
  /*
   * Service status after update
   */
  protobuf_c_boolean has_servicestatus;
  Fnv__Soa__Framework__Protobuf__ServiceStatus__Values servicestatus;
  /*
   * Update service status action status
   */
  protobuf_c_boolean has_actionstatus;
  Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto__ActionStatus actionstatus;
};
#define FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fnv__soa__framework__protobuf__update_service_status_result_proto__descriptor) \
    , NULL, 0, FNV__SOA__FRAMEWORK__PROTOBUF__SERVICE_STATUS__VALUES__NOT_AVAILABLE, 0, FNV__SOA__FRAMEWORK__PROTOBUF__UPDATE_SERVICE_STATUS_RESULT_PROTO__ACTION_STATUS__OK }


/* Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto methods */
void   fnv__soa__framework__protobuf__update_service_status_result_proto__init
                     (Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto         *message);
size_t fnv__soa__framework__protobuf__update_service_status_result_proto__get_packed_size
                     (const Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto   *message);
size_t fnv__soa__framework__protobuf__update_service_status_result_proto__pack
                     (const Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto   *message,
                      uint8_t             *out);
size_t fnv__soa__framework__protobuf__update_service_status_result_proto__pack_to_buffer
                     (const Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto   *message,
                      ProtobufCBuffer     *buffer);
Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto *
       fnv__soa__framework__protobuf__update_service_status_result_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fnv__soa__framework__protobuf__update_service_status_result_proto__free_unpacked
                     (Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto_Closure)
                 (const Fnv__Soa__Framework__Protobuf__UpdateServiceStatusResultProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fnv__soa__framework__protobuf__update_service_status_result_proto__descriptor;
extern const ProtobufCEnumDescriptor    fnv__soa__framework__protobuf__update_service_status_result_proto__action_status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_update_5fservice_5fstatus_5fresult_5fpublic_2eproto__INCLUDED */
