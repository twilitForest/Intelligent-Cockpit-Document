// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoaIpcConnectionOptions.proto

#ifndef PROTOBUF_SoaIpcConnectionOptions_2eproto__INCLUDED
#define PROTOBUF_SoaIpcConnectionOptions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SoaIpcConnectionOptions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaIpcConnectionOptionsImpl();
void InitDefaultsSoaIpcConnectionOptions();
inline void InitDefaults() {
  InitDefaultsSoaIpcConnectionOptions();
}
}  // namespace protobuf_SoaIpcConnectionOptions_2eproto
namespace fnv {
namespace soa {
namespace gateway {
class SoaIpcConnectionOptions;
class SoaIpcConnectionOptionsDefaultTypeInternal;
extern SoaIpcConnectionOptionsDefaultTypeInternal _SoaIpcConnectionOptions_default_instance_;
}  // namespace gateway
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace gateway {

// ===================================================================

class SoaIpcConnectionOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.gateway.SoaIpcConnectionOptions) */ {
 public:
  SoaIpcConnectionOptions();
  virtual ~SoaIpcConnectionOptions();

  SoaIpcConnectionOptions(const SoaIpcConnectionOptions& from);

  inline SoaIpcConnectionOptions& operator=(const SoaIpcConnectionOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaIpcConnectionOptions(SoaIpcConnectionOptions&& from) noexcept
    : SoaIpcConnectionOptions() {
    *this = ::std::move(from);
  }

  inline SoaIpcConnectionOptions& operator=(SoaIpcConnectionOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaIpcConnectionOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaIpcConnectionOptions* internal_default_instance() {
    return reinterpret_cast<const SoaIpcConnectionOptions*>(
               &_SoaIpcConnectionOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaIpcConnectionOptions* other);
  friend void swap(SoaIpcConnectionOptions& a, SoaIpcConnectionOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaIpcConnectionOptions* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaIpcConnectionOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaIpcConnectionOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string serverFilePath = 1;
  bool has_serverfilepath() const;
  void clear_serverfilepath();
  static const int kServerFilePathFieldNumber = 1;
  const ::std::string& serverfilepath() const;
  void set_serverfilepath(const ::std::string& value);
  #if LANG_CXX11
  void set_serverfilepath(::std::string&& value);
  #endif
  void set_serverfilepath(const char* value);
  void set_serverfilepath(const char* value, size_t size);
  ::std::string* mutable_serverfilepath();
  ::std::string* release_serverfilepath();
  void set_allocated_serverfilepath(::std::string* serverfilepath);

  // required string clientFilePath = 2;
  bool has_clientfilepath() const;
  void clear_clientfilepath();
  static const int kClientFilePathFieldNumber = 2;
  const ::std::string& clientfilepath() const;
  void set_clientfilepath(const ::std::string& value);
  #if LANG_CXX11
  void set_clientfilepath(::std::string&& value);
  #endif
  void set_clientfilepath(const char* value);
  void set_clientfilepath(const char* value, size_t size);
  ::std::string* mutable_clientfilepath();
  ::std::string* release_clientfilepath();
  void set_allocated_clientfilepath(::std::string* clientfilepath);

  // optional int32 keepAlive = 4;
  bool has_keepalive() const;
  void clear_keepalive();
  static const int kKeepAliveFieldNumber = 4;
  ::google::protobuf::int32 keepalive() const;
  void set_keepalive(::google::protobuf::int32 value);

  // optional bool cleanSession = 3;
  bool has_cleansession() const;
  void clear_cleansession();
  static const int kCleanSessionFieldNumber = 3;
  bool cleansession() const;
  void set_cleansession(bool value);

  // optional bool lastWillAndTestament = 5;
  bool has_lastwillandtestament() const;
  void clear_lastwillandtestament();
  static const int kLastWillAndTestamentFieldNumber = 5;
  bool lastwillandtestament() const;
  void set_lastwillandtestament(bool value);

  // optional bool retained = 6;
  bool has_retained() const;
  void clear_retained();
  static const int kRetainedFieldNumber = 6;
  bool retained() const;
  void set_retained(bool value);

  // @@protoc_insertion_point(class_scope:fnv.soa.gateway.SoaIpcConnectionOptions)
 private:
  void set_has_serverfilepath();
  void clear_has_serverfilepath();
  void set_has_clientfilepath();
  void clear_has_clientfilepath();
  void set_has_cleansession();
  void clear_has_cleansession();
  void set_has_keepalive();
  void clear_has_keepalive();
  void set_has_lastwillandtestament();
  void clear_has_lastwillandtestament();
  void set_has_retained();
  void clear_has_retained();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serverfilepath_;
  ::google::protobuf::internal::ArenaStringPtr clientfilepath_;
  ::google::protobuf::int32 keepalive_;
  bool cleansession_;
  bool lastwillandtestament_;
  bool retained_;
  friend struct ::protobuf_SoaIpcConnectionOptions_2eproto::TableStruct;
  friend void ::protobuf_SoaIpcConnectionOptions_2eproto::InitDefaultsSoaIpcConnectionOptionsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaIpcConnectionOptions

// required string serverFilePath = 1;
inline bool SoaIpcConnectionOptions::has_serverfilepath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_serverfilepath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaIpcConnectionOptions::clear_has_serverfilepath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaIpcConnectionOptions::clear_serverfilepath() {
  serverfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serverfilepath();
}
inline const ::std::string& SoaIpcConnectionOptions::serverfilepath() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
  return serverfilepath_.GetNoArena();
}
inline void SoaIpcConnectionOptions::set_serverfilepath(const ::std::string& value) {
  set_has_serverfilepath();
  serverfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
}
#if LANG_CXX11
inline void SoaIpcConnectionOptions::set_serverfilepath(::std::string&& value) {
  set_has_serverfilepath();
  serverfilepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
}
#endif
inline void SoaIpcConnectionOptions::set_serverfilepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serverfilepath();
  serverfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
}
inline void SoaIpcConnectionOptions::set_serverfilepath(const char* value, size_t size) {
  set_has_serverfilepath();
  serverfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
}
inline ::std::string* SoaIpcConnectionOptions::mutable_serverfilepath() {
  set_has_serverfilepath();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
  return serverfilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaIpcConnectionOptions::release_serverfilepath() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
  clear_has_serverfilepath();
  return serverfilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaIpcConnectionOptions::set_allocated_serverfilepath(::std::string* serverfilepath) {
  if (serverfilepath != NULL) {
    set_has_serverfilepath();
  } else {
    clear_has_serverfilepath();
  }
  serverfilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverfilepath);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcConnectionOptions.serverFilePath)
}

// required string clientFilePath = 2;
inline bool SoaIpcConnectionOptions::has_clientfilepath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_clientfilepath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoaIpcConnectionOptions::clear_has_clientfilepath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoaIpcConnectionOptions::clear_clientfilepath() {
  clientfilepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientfilepath();
}
inline const ::std::string& SoaIpcConnectionOptions::clientfilepath() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
  return clientfilepath_.GetNoArena();
}
inline void SoaIpcConnectionOptions::set_clientfilepath(const ::std::string& value) {
  set_has_clientfilepath();
  clientfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
}
#if LANG_CXX11
inline void SoaIpcConnectionOptions::set_clientfilepath(::std::string&& value) {
  set_has_clientfilepath();
  clientfilepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
}
#endif
inline void SoaIpcConnectionOptions::set_clientfilepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientfilepath();
  clientfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
}
inline void SoaIpcConnectionOptions::set_clientfilepath(const char* value, size_t size) {
  set_has_clientfilepath();
  clientfilepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
}
inline ::std::string* SoaIpcConnectionOptions::mutable_clientfilepath() {
  set_has_clientfilepath();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
  return clientfilepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaIpcConnectionOptions::release_clientfilepath() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
  clear_has_clientfilepath();
  return clientfilepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaIpcConnectionOptions::set_allocated_clientfilepath(::std::string* clientfilepath) {
  if (clientfilepath != NULL) {
    set_has_clientfilepath();
  } else {
    clear_has_clientfilepath();
  }
  clientfilepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientfilepath);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaIpcConnectionOptions.clientFilePath)
}

// optional bool cleanSession = 3;
inline bool SoaIpcConnectionOptions::has_cleansession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_cleansession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoaIpcConnectionOptions::clear_has_cleansession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoaIpcConnectionOptions::clear_cleansession() {
  cleansession_ = false;
  clear_has_cleansession();
}
inline bool SoaIpcConnectionOptions::cleansession() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.cleanSession)
  return cleansession_;
}
inline void SoaIpcConnectionOptions::set_cleansession(bool value) {
  set_has_cleansession();
  cleansession_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.cleanSession)
}

// optional int32 keepAlive = 4;
inline bool SoaIpcConnectionOptions::has_keepalive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_keepalive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoaIpcConnectionOptions::clear_has_keepalive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoaIpcConnectionOptions::clear_keepalive() {
  keepalive_ = 0;
  clear_has_keepalive();
}
inline ::google::protobuf::int32 SoaIpcConnectionOptions::keepalive() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.keepAlive)
  return keepalive_;
}
inline void SoaIpcConnectionOptions::set_keepalive(::google::protobuf::int32 value) {
  set_has_keepalive();
  keepalive_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.keepAlive)
}

// optional bool lastWillAndTestament = 5;
inline bool SoaIpcConnectionOptions::has_lastwillandtestament() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_lastwillandtestament() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoaIpcConnectionOptions::clear_has_lastwillandtestament() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoaIpcConnectionOptions::clear_lastwillandtestament() {
  lastwillandtestament_ = false;
  clear_has_lastwillandtestament();
}
inline bool SoaIpcConnectionOptions::lastwillandtestament() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.lastWillAndTestament)
  return lastwillandtestament_;
}
inline void SoaIpcConnectionOptions::set_lastwillandtestament(bool value) {
  set_has_lastwillandtestament();
  lastwillandtestament_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.lastWillAndTestament)
}

// optional bool retained = 6;
inline bool SoaIpcConnectionOptions::has_retained() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoaIpcConnectionOptions::set_has_retained() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoaIpcConnectionOptions::clear_has_retained() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoaIpcConnectionOptions::clear_retained() {
  retained_ = false;
  clear_has_retained();
}
inline bool SoaIpcConnectionOptions::retained() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaIpcConnectionOptions.retained)
  return retained_;
}
inline void SoaIpcConnectionOptions::set_retained(bool value) {
  set_has_retained();
  retained_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaIpcConnectionOptions.retained)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace soa
}  // namespace fnv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SoaIpcConnectionOptions_2eproto__INCLUDED
