/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: soa_message_proto.proto */

#ifndef PROTOBUF_C_soa_5fmessage_5fproto_2eproto__INCLUDED
#define PROTOBUF_C_soa_5fmessage_5fproto_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Fnv__Soa__Framework__SoaMessageProto Fnv__Soa__Framework__SoaMessageProto;


/* --- enums --- */

typedef enum _Fnv__Soa__Framework__SoaMessageProto__TransactionError {
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__NO_ERROR = 0,
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__GENERAL_ERROR = 1,
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__VERSION_MISMATCH = 2,
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__COMMAND_NOT_SUPPORTED = 3,
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__PROVIDER_CLOSED = 4,
  FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__PROVIDER_DISCONNECTED = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR)
} Fnv__Soa__Framework__SoaMessageProto__TransactionError;

/* --- messages --- */

/*
 **
 * @fnv_proto
 * Contains SOA message header fields
 * @fnv_topic all topics
 * @fnv_scope ECG_INTERNAL
 * @fnv_api_source INTERNAL
 * @fnv_message_version 1.0
 */
struct  _Fnv__Soa__Framework__SoaMessageProto
{
  ProtobufCMessage base;
  /*
   * Service endpoint. This is a part on request/response context.
   */
  char *serviceid;
  /*
   * Command ID.
   */
  char *commandid;
  /*
   * Service version
   */
  char *serviceversion;
  /*
   * Transaction ID.  This is a part on request/response context.
   */
  char *transactionid;
  /*
   * Data multicast endpoint.
   */
  char *dataendpoint;
  /*
   * Consumer Endpoint.
   */
  char *consumerendpoint;
  /*
   * The payload
   */
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  protobuf_c_boolean has_transactionerror;
  Fnv__Soa__Framework__SoaMessageProto__TransactionError transactionerror;
  char *transactionerrordetailes;
  char *sender_ecu_id;
  char *sender_uid;
  /*
   * optional field not useable by user level of SoaMessage
   */
  protobuf_c_boolean has_context;
  ProtobufCBinaryData context;
};
#define FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fnv__soa__framework__soa_message_proto__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, 0, {0,NULL}, 0, FNV__SOA__FRAMEWORK__SOA_MESSAGE_PROTO__TRANSACTION_ERROR__NO_ERROR, NULL, NULL, NULL, 0, {0,NULL} }


/* Fnv__Soa__Framework__SoaMessageProto methods */
void   fnv__soa__framework__soa_message_proto__init
                     (Fnv__Soa__Framework__SoaMessageProto         *message);
size_t fnv__soa__framework__soa_message_proto__get_packed_size
                     (const Fnv__Soa__Framework__SoaMessageProto   *message);
size_t fnv__soa__framework__soa_message_proto__pack
                     (const Fnv__Soa__Framework__SoaMessageProto   *message,
                      uint8_t             *out);
size_t fnv__soa__framework__soa_message_proto__pack_to_buffer
                     (const Fnv__Soa__Framework__SoaMessageProto   *message,
                      ProtobufCBuffer     *buffer);
Fnv__Soa__Framework__SoaMessageProto *
       fnv__soa__framework__soa_message_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fnv__soa__framework__soa_message_proto__free_unpacked
                     (Fnv__Soa__Framework__SoaMessageProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fnv__Soa__Framework__SoaMessageProto_Closure)
                 (const Fnv__Soa__Framework__SoaMessageProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fnv__soa__framework__soa_message_proto__descriptor;
extern const ProtobufCEnumDescriptor    fnv__soa__framework__soa_message_proto__transaction_error__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_soa_5fmessage_5fproto_2eproto__INCLUDED */
