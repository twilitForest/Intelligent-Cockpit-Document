// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoaGatewayConnectionState.proto

#ifndef PROTOBUF_SoaGatewayConnectionState_2eproto__INCLUDED
#define PROTOBUF_SoaGatewayConnectionState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SoaGatewayConnectionState_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaGatewayConnectionStateImpl();
void InitDefaultsSoaGatewayConnectionState();
inline void InitDefaults() {
  InitDefaultsSoaGatewayConnectionState();
}
}  // namespace protobuf_SoaGatewayConnectionState_2eproto
namespace fnv {
namespace soa {
namespace gateway {
class SoaGatewayConnectionState;
class SoaGatewayConnectionStateDefaultTypeInternal;
extern SoaGatewayConnectionStateDefaultTypeInternal _SoaGatewayConnectionState_default_instance_;
}  // namespace gateway
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace gateway {

enum SoaGatewayConnectionState_ConnectionState {
  SoaGatewayConnectionState_ConnectionState_CONNECTED = 0,
  SoaGatewayConnectionState_ConnectionState_DISCONNECTED = 1
};
bool SoaGatewayConnectionState_ConnectionState_IsValid(int value);
const SoaGatewayConnectionState_ConnectionState SoaGatewayConnectionState_ConnectionState_ConnectionState_MIN = SoaGatewayConnectionState_ConnectionState_CONNECTED;
const SoaGatewayConnectionState_ConnectionState SoaGatewayConnectionState_ConnectionState_ConnectionState_MAX = SoaGatewayConnectionState_ConnectionState_DISCONNECTED;
const int SoaGatewayConnectionState_ConnectionState_ConnectionState_ARRAYSIZE = SoaGatewayConnectionState_ConnectionState_ConnectionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* SoaGatewayConnectionState_ConnectionState_descriptor();
inline const ::std::string& SoaGatewayConnectionState_ConnectionState_Name(SoaGatewayConnectionState_ConnectionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    SoaGatewayConnectionState_ConnectionState_descriptor(), value);
}
inline bool SoaGatewayConnectionState_ConnectionState_Parse(
    const ::std::string& name, SoaGatewayConnectionState_ConnectionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SoaGatewayConnectionState_ConnectionState>(
    SoaGatewayConnectionState_ConnectionState_descriptor(), name, value);
}
// ===================================================================

class SoaGatewayConnectionState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.gateway.SoaGatewayConnectionState) */ {
 public:
  SoaGatewayConnectionState();
  virtual ~SoaGatewayConnectionState();

  SoaGatewayConnectionState(const SoaGatewayConnectionState& from);

  inline SoaGatewayConnectionState& operator=(const SoaGatewayConnectionState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaGatewayConnectionState(SoaGatewayConnectionState&& from) noexcept
    : SoaGatewayConnectionState() {
    *this = ::std::move(from);
  }

  inline SoaGatewayConnectionState& operator=(SoaGatewayConnectionState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaGatewayConnectionState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaGatewayConnectionState* internal_default_instance() {
    return reinterpret_cast<const SoaGatewayConnectionState*>(
               &_SoaGatewayConnectionState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaGatewayConnectionState* other);
  friend void swap(SoaGatewayConnectionState& a, SoaGatewayConnectionState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaGatewayConnectionState* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaGatewayConnectionState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaGatewayConnectionState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SoaGatewayConnectionState_ConnectionState ConnectionState;
  static const ConnectionState CONNECTED =
    SoaGatewayConnectionState_ConnectionState_CONNECTED;
  static const ConnectionState DISCONNECTED =
    SoaGatewayConnectionState_ConnectionState_DISCONNECTED;
  static inline bool ConnectionState_IsValid(int value) {
    return SoaGatewayConnectionState_ConnectionState_IsValid(value);
  }
  static const ConnectionState ConnectionState_MIN =
    SoaGatewayConnectionState_ConnectionState_ConnectionState_MIN;
  static const ConnectionState ConnectionState_MAX =
    SoaGatewayConnectionState_ConnectionState_ConnectionState_MAX;
  static const int ConnectionState_ARRAYSIZE =
    SoaGatewayConnectionState_ConnectionState_ConnectionState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectionState_descriptor() {
    return SoaGatewayConnectionState_ConnectionState_descriptor();
  }
  static inline const ::std::string& ConnectionState_Name(ConnectionState value) {
    return SoaGatewayConnectionState_ConnectionState_Name(value);
  }
  static inline bool ConnectionState_Parse(const ::std::string& name,
      ConnectionState* value) {
    return SoaGatewayConnectionState_ConnectionState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string ecuName = 2;
  bool has_ecuname() const;
  void clear_ecuname();
  static const int kEcuNameFieldNumber = 2;
  const ::std::string& ecuname() const;
  void set_ecuname(const ::std::string& value);
  #if LANG_CXX11
  void set_ecuname(::std::string&& value);
  #endif
  void set_ecuname(const char* value);
  void set_ecuname(const char* value, size_t size);
  ::std::string* mutable_ecuname();
  ::std::string* release_ecuname();
  void set_allocated_ecuname(::std::string* ecuname);

  // optional string ipAddress = 3;
  bool has_ipaddress() const;
  void clear_ipaddress();
  static const int kIpAddressFieldNumber = 3;
  const ::std::string& ipaddress() const;
  void set_ipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_ipaddress(::std::string&& value);
  #endif
  void set_ipaddress(const char* value);
  void set_ipaddress(const char* value, size_t size);
  ::std::string* mutable_ipaddress();
  ::std::string* release_ipaddress();
  void set_allocated_ipaddress(::std::string* ipaddress);

  // required .fnv.soa.gateway.SoaGatewayConnectionState.ConnectionState connectionState = 1;
  bool has_connectionstate() const;
  void clear_connectionstate();
  static const int kConnectionStateFieldNumber = 1;
  ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState connectionstate() const;
  void set_connectionstate(::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState value);

  // optional int32 retryCount = 4;
  bool has_retrycount() const;
  void clear_retrycount();
  static const int kRetryCountFieldNumber = 4;
  ::google::protobuf::int32 retrycount() const;
  void set_retrycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fnv.soa.gateway.SoaGatewayConnectionState)
 private:
  void set_has_connectionstate();
  void clear_has_connectionstate();
  void set_has_ecuname();
  void clear_has_ecuname();
  void set_has_ipaddress();
  void clear_has_ipaddress();
  void set_has_retrycount();
  void clear_has_retrycount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ecuname_;
  ::google::protobuf::internal::ArenaStringPtr ipaddress_;
  int connectionstate_;
  ::google::protobuf::int32 retrycount_;
  friend struct ::protobuf_SoaGatewayConnectionState_2eproto::TableStruct;
  friend void ::protobuf_SoaGatewayConnectionState_2eproto::InitDefaultsSoaGatewayConnectionStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaGatewayConnectionState

// required .fnv.soa.gateway.SoaGatewayConnectionState.ConnectionState connectionState = 1;
inline bool SoaGatewayConnectionState::has_connectionstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoaGatewayConnectionState::set_has_connectionstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoaGatewayConnectionState::clear_has_connectionstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoaGatewayConnectionState::clear_connectionstate() {
  connectionstate_ = 0;
  clear_has_connectionstate();
}
inline ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState SoaGatewayConnectionState::connectionstate() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayConnectionState.connectionState)
  return static_cast< ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState >(connectionstate_);
}
inline void SoaGatewayConnectionState::set_connectionstate(::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState value) {
  assert(::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState_IsValid(value));
  set_has_connectionstate();
  connectionstate_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayConnectionState.connectionState)
}

// required string ecuName = 2;
inline bool SoaGatewayConnectionState::has_ecuname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaGatewayConnectionState::set_has_ecuname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaGatewayConnectionState::clear_has_ecuname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaGatewayConnectionState::clear_ecuname() {
  ecuname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ecuname();
}
inline const ::std::string& SoaGatewayConnectionState::ecuname() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
  return ecuname_.GetNoArena();
}
inline void SoaGatewayConnectionState::set_ecuname(const ::std::string& value) {
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
}
#if LANG_CXX11
inline void SoaGatewayConnectionState::set_ecuname(::std::string&& value) {
  set_has_ecuname();
  ecuname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
}
#endif
inline void SoaGatewayConnectionState::set_ecuname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
}
inline void SoaGatewayConnectionState::set_ecuname(const char* value, size_t size) {
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
}
inline ::std::string* SoaGatewayConnectionState::mutable_ecuname() {
  set_has_ecuname();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
  return ecuname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaGatewayConnectionState::release_ecuname() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
  clear_has_ecuname();
  return ecuname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaGatewayConnectionState::set_allocated_ecuname(::std::string* ecuname) {
  if (ecuname != NULL) {
    set_has_ecuname();
  } else {
    clear_has_ecuname();
  }
  ecuname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ecuname);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaGatewayConnectionState.ecuName)
}

// optional string ipAddress = 3;
inline bool SoaGatewayConnectionState::has_ipaddress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoaGatewayConnectionState::set_has_ipaddress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoaGatewayConnectionState::clear_has_ipaddress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoaGatewayConnectionState::clear_ipaddress() {
  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ipaddress();
}
inline const ::std::string& SoaGatewayConnectionState::ipaddress() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
  return ipaddress_.GetNoArena();
}
inline void SoaGatewayConnectionState::set_ipaddress(const ::std::string& value) {
  set_has_ipaddress();
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
}
#if LANG_CXX11
inline void SoaGatewayConnectionState::set_ipaddress(::std::string&& value) {
  set_has_ipaddress();
  ipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
}
#endif
inline void SoaGatewayConnectionState::set_ipaddress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ipaddress();
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
}
inline void SoaGatewayConnectionState::set_ipaddress(const char* value, size_t size) {
  set_has_ipaddress();
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
}
inline ::std::string* SoaGatewayConnectionState::mutable_ipaddress() {
  set_has_ipaddress();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
  return ipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaGatewayConnectionState::release_ipaddress() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
  clear_has_ipaddress();
  return ipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaGatewayConnectionState::set_allocated_ipaddress(::std::string* ipaddress) {
  if (ipaddress != NULL) {
    set_has_ipaddress();
  } else {
    clear_has_ipaddress();
  }
  ipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipaddress);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaGatewayConnectionState.ipAddress)
}

// optional int32 retryCount = 4;
inline bool SoaGatewayConnectionState::has_retrycount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoaGatewayConnectionState::set_has_retrycount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoaGatewayConnectionState::clear_has_retrycount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoaGatewayConnectionState::clear_retrycount() {
  retrycount_ = 0;
  clear_has_retrycount();
}
inline ::google::protobuf::int32 SoaGatewayConnectionState::retrycount() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayConnectionState.retryCount)
  return retrycount_;
}
inline void SoaGatewayConnectionState::set_retrycount(::google::protobuf::int32 value) {
  set_has_retrycount();
  retrycount_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayConnectionState.retryCount)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace soa
}  // namespace fnv

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState>() {
  return ::fnv::soa::gateway::SoaGatewayConnectionState_ConnectionState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SoaGatewayConnectionState_2eproto__INCLUDED
