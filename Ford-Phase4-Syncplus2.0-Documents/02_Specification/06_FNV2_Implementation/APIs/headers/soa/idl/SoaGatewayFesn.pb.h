// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SoaGatewayFesn.proto

#ifndef PROTOBUF_SoaGatewayFesn_2eproto__INCLUDED
#define PROTOBUF_SoaGatewayFesn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SoaGatewayFesn_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaGatewayFesnImpl();
void InitDefaultsSoaGatewayFesn();
inline void InitDefaults() {
  InitDefaultsSoaGatewayFesn();
}
}  // namespace protobuf_SoaGatewayFesn_2eproto
namespace fnv {
namespace soa {
namespace gateway {
class SoaGatewayFesn;
class SoaGatewayFesnDefaultTypeInternal;
extern SoaGatewayFesnDefaultTypeInternal _SoaGatewayFesn_default_instance_;
}  // namespace gateway
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace gateway {

// ===================================================================

class SoaGatewayFesn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.gateway.SoaGatewayFesn) */ {
 public:
  SoaGatewayFesn();
  virtual ~SoaGatewayFesn();

  SoaGatewayFesn(const SoaGatewayFesn& from);

  inline SoaGatewayFesn& operator=(const SoaGatewayFesn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaGatewayFesn(SoaGatewayFesn&& from) noexcept
    : SoaGatewayFesn() {
    *this = ::std::move(from);
  }

  inline SoaGatewayFesn& operator=(SoaGatewayFesn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaGatewayFesn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaGatewayFesn* internal_default_instance() {
    return reinterpret_cast<const SoaGatewayFesn*>(
               &_SoaGatewayFesn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaGatewayFesn* other);
  friend void swap(SoaGatewayFesn& a, SoaGatewayFesn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaGatewayFesn* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaGatewayFesn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaGatewayFesn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ecuName = 1;
  bool has_ecuname() const;
  void clear_ecuname();
  static const int kEcuNameFieldNumber = 1;
  const ::std::string& ecuname() const;
  void set_ecuname(const ::std::string& value);
  #if LANG_CXX11
  void set_ecuname(::std::string&& value);
  #endif
  void set_ecuname(const char* value);
  void set_ecuname(const char* value, size_t size);
  ::std::string* mutable_ecuname();
  ::std::string* release_ecuname();
  void set_allocated_ecuname(::std::string* ecuname);

  // optional string esn = 2;
  bool has_esn() const;
  void clear_esn();
  static const int kEsnFieldNumber = 2;
  const ::std::string& esn() const;
  void set_esn(const ::std::string& value);
  #if LANG_CXX11
  void set_esn(::std::string&& value);
  #endif
  void set_esn(const char* value);
  void set_esn(const char* value, size_t size);
  ::std::string* mutable_esn();
  ::std::string* release_esn();
  void set_allocated_esn(::std::string* esn);

  // @@protoc_insertion_point(class_scope:fnv.soa.gateway.SoaGatewayFesn)
 private:
  void set_has_ecuname();
  void clear_has_ecuname();
  void set_has_esn();
  void clear_has_esn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ecuname_;
  ::google::protobuf::internal::ArenaStringPtr esn_;
  friend struct ::protobuf_SoaGatewayFesn_2eproto::TableStruct;
  friend void ::protobuf_SoaGatewayFesn_2eproto::InitDefaultsSoaGatewayFesnImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaGatewayFesn

// required string ecuName = 1;
inline bool SoaGatewayFesn::has_ecuname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaGatewayFesn::set_has_ecuname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaGatewayFesn::clear_has_ecuname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaGatewayFesn::clear_ecuname() {
  ecuname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ecuname();
}
inline const ::std::string& SoaGatewayFesn::ecuname() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayFesn.ecuName)
  return ecuname_.GetNoArena();
}
inline void SoaGatewayFesn::set_ecuname(const ::std::string& value) {
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayFesn.ecuName)
}
#if LANG_CXX11
inline void SoaGatewayFesn::set_ecuname(::std::string&& value) {
  set_has_ecuname();
  ecuname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaGatewayFesn.ecuName)
}
#endif
inline void SoaGatewayFesn::set_ecuname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaGatewayFesn.ecuName)
}
inline void SoaGatewayFesn::set_ecuname(const char* value, size_t size) {
  set_has_ecuname();
  ecuname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaGatewayFesn.ecuName)
}
inline ::std::string* SoaGatewayFesn::mutable_ecuname() {
  set_has_ecuname();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaGatewayFesn.ecuName)
  return ecuname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaGatewayFesn::release_ecuname() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaGatewayFesn.ecuName)
  clear_has_ecuname();
  return ecuname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaGatewayFesn::set_allocated_ecuname(::std::string* ecuname) {
  if (ecuname != NULL) {
    set_has_ecuname();
  } else {
    clear_has_ecuname();
  }
  ecuname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ecuname);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaGatewayFesn.ecuName)
}

// optional string esn = 2;
inline bool SoaGatewayFesn::has_esn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoaGatewayFesn::set_has_esn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoaGatewayFesn::clear_has_esn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoaGatewayFesn::clear_esn() {
  esn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_esn();
}
inline const ::std::string& SoaGatewayFesn::esn() const {
  // @@protoc_insertion_point(field_get:fnv.soa.gateway.SoaGatewayFesn.esn)
  return esn_.GetNoArena();
}
inline void SoaGatewayFesn::set_esn(const ::std::string& value) {
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.gateway.SoaGatewayFesn.esn)
}
#if LANG_CXX11
inline void SoaGatewayFesn::set_esn(::std::string&& value) {
  set_has_esn();
  esn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.gateway.SoaGatewayFesn.esn)
}
#endif
inline void SoaGatewayFesn::set_esn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.gateway.SoaGatewayFesn.esn)
}
inline void SoaGatewayFesn::set_esn(const char* value, size_t size) {
  set_has_esn();
  esn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.gateway.SoaGatewayFesn.esn)
}
inline ::std::string* SoaGatewayFesn::mutable_esn() {
  set_has_esn();
  // @@protoc_insertion_point(field_mutable:fnv.soa.gateway.SoaGatewayFesn.esn)
  return esn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaGatewayFesn::release_esn() {
  // @@protoc_insertion_point(field_release:fnv.soa.gateway.SoaGatewayFesn.esn)
  clear_has_esn();
  return esn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaGatewayFesn::set_allocated_esn(::std::string* esn) {
  if (esn != NULL) {
    set_has_esn();
  } else {
    clear_has_esn();
  }
  esn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), esn);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.gateway.SoaGatewayFesn.esn)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace soa
}  // namespace fnv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SoaGatewayFesn_2eproto__INCLUDED
