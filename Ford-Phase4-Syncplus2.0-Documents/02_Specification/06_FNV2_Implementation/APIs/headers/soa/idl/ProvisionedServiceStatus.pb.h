// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProvisionedServiceStatus.proto

#ifndef PROTOBUF_ProvisionedServiceStatus_2eproto__INCLUDED
#define PROTOBUF_ProvisionedServiceStatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ProvisionedServiceStatus_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
inline void InitDefaults() {
}
}  // namespace protobuf_ProvisionedServiceStatus_2eproto
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {
namespace ProvisionedServiceStatus {
}  // namespace ProvisionedServiceStatus
}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {
namespace ProvisionedServiceStatus {

enum Values {
  AVAILABLE = 1,
  RUNNING = 2
};
bool Values_IsValid(int value);
const Values Values_MIN = AVAILABLE;
const Values Values_MAX = RUNNING;
const int Values_ARRAYSIZE = Values_MAX + 1;

const ::google::protobuf::EnumDescriptor* Values_descriptor();
inline const ::std::string& Values_Name(Values value) {
  return ::google::protobuf::internal::NameOfEnum(
    Values_descriptor(), value);
}
inline bool Values_Parse(
    const ::std::string& name, Values* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Values>(
    Values_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProvisionedServiceStatus
}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fnv::soa::framework::protobuf::ProvisionedServiceStatus::Values> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fnv::soa::framework::protobuf::ProvisionedServiceStatus::Values>() {
  return ::fnv::soa::framework::protobuf::ProvisionedServiceStatus::Values_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProvisionedServiceStatus_2eproto__INCLUDED
