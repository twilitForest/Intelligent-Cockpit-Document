// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: register_service_result_public.proto

#ifndef PROTOBUF_register_5fservice_5fresult_5fpublic_2eproto__INCLUDED
#define PROTOBUF_register_5fservice_5fresult_5fpublic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_register_5fservice_5fresult_5fpublic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRegisterServiceResultProtoImpl();
void InitDefaultsRegisterServiceResultProto();
inline void InitDefaults() {
  InitDefaultsRegisterServiceResultProto();
}
}  // namespace protobuf_register_5fservice_5fresult_5fpublic_2eproto
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {
class RegisterServiceResultProto;
class RegisterServiceResultProtoDefaultTypeInternal;
extern RegisterServiceResultProtoDefaultTypeInternal _RegisterServiceResultProto_default_instance_;
}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace framework {
namespace protobuf {

enum RegisterServiceResultProto_ActionStatus {
  RegisterServiceResultProto_ActionStatus_OK_CLIENT_PROVISIONED = 1,
  RegisterServiceResultProto_ActionStatus_OK_CLIENT_NOT_PROVISIONED = 2,
  RegisterServiceResultProto_ActionStatus_ERROR_UNKNOWN_ERROR = 3
};
bool RegisterServiceResultProto_ActionStatus_IsValid(int value);
const RegisterServiceResultProto_ActionStatus RegisterServiceResultProto_ActionStatus_ActionStatus_MIN = RegisterServiceResultProto_ActionStatus_OK_CLIENT_PROVISIONED;
const RegisterServiceResultProto_ActionStatus RegisterServiceResultProto_ActionStatus_ActionStatus_MAX = RegisterServiceResultProto_ActionStatus_ERROR_UNKNOWN_ERROR;
const int RegisterServiceResultProto_ActionStatus_ActionStatus_ARRAYSIZE = RegisterServiceResultProto_ActionStatus_ActionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterServiceResultProto_ActionStatus_descriptor();
inline const ::std::string& RegisterServiceResultProto_ActionStatus_Name(RegisterServiceResultProto_ActionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterServiceResultProto_ActionStatus_descriptor(), value);
}
inline bool RegisterServiceResultProto_ActionStatus_Parse(
    const ::std::string& name, RegisterServiceResultProto_ActionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterServiceResultProto_ActionStatus>(
    RegisterServiceResultProto_ActionStatus_descriptor(), name, value);
}
// ===================================================================

class RegisterServiceResultProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.framework.protobuf.RegisterServiceResultProto) */ {
 public:
  RegisterServiceResultProto();
  virtual ~RegisterServiceResultProto();

  RegisterServiceResultProto(const RegisterServiceResultProto& from);

  inline RegisterServiceResultProto& operator=(const RegisterServiceResultProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterServiceResultProto(RegisterServiceResultProto&& from) noexcept
    : RegisterServiceResultProto() {
    *this = ::std::move(from);
  }

  inline RegisterServiceResultProto& operator=(RegisterServiceResultProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterServiceResultProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterServiceResultProto* internal_default_instance() {
    return reinterpret_cast<const RegisterServiceResultProto*>(
               &_RegisterServiceResultProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RegisterServiceResultProto* other);
  friend void swap(RegisterServiceResultProto& a, RegisterServiceResultProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterServiceResultProto* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterServiceResultProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterServiceResultProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RegisterServiceResultProto_ActionStatus ActionStatus;
  static const ActionStatus OK_CLIENT_PROVISIONED =
    RegisterServiceResultProto_ActionStatus_OK_CLIENT_PROVISIONED;
  static const ActionStatus OK_CLIENT_NOT_PROVISIONED =
    RegisterServiceResultProto_ActionStatus_OK_CLIENT_NOT_PROVISIONED;
  static const ActionStatus ERROR_UNKNOWN_ERROR =
    RegisterServiceResultProto_ActionStatus_ERROR_UNKNOWN_ERROR;
  static inline bool ActionStatus_IsValid(int value) {
    return RegisterServiceResultProto_ActionStatus_IsValid(value);
  }
  static const ActionStatus ActionStatus_MIN =
    RegisterServiceResultProto_ActionStatus_ActionStatus_MIN;
  static const ActionStatus ActionStatus_MAX =
    RegisterServiceResultProto_ActionStatus_ActionStatus_MAX;
  static const int ActionStatus_ARRAYSIZE =
    RegisterServiceResultProto_ActionStatus_ActionStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionStatus_descriptor() {
    return RegisterServiceResultProto_ActionStatus_descriptor();
  }
  static inline const ::std::string& ActionStatus_Name(ActionStatus value) {
    return RegisterServiceResultProto_ActionStatus_Name(value);
  }
  static inline bool ActionStatus_Parse(const ::std::string& name,
      ActionStatus* value) {
    return RegisterServiceResultProto_ActionStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string service_host_id = 1;
  bool has_service_host_id() const;
  void clear_service_host_id();
  static const int kServiceHostIdFieldNumber = 1;
  const ::std::string& service_host_id() const;
  void set_service_host_id(const ::std::string& value);
  #if LANG_CXX11
  void set_service_host_id(::std::string&& value);
  #endif
  void set_service_host_id(const char* value);
  void set_service_host_id(const char* value, size_t size);
  ::std::string* mutable_service_host_id();
  ::std::string* release_service_host_id();
  void set_allocated_service_host_id(::std::string* service_host_id);

  // optional .fnv.soa.framework.protobuf.RegisterServiceResultProto.ActionStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus status() const;
  void set_status(::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus value);

  // @@protoc_insertion_point(class_scope:fnv.soa.framework.protobuf.RegisterServiceResultProto)
 private:
  void set_has_service_host_id();
  void clear_has_service_host_id();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr service_host_id_;
  int status_;
  friend struct ::protobuf_register_5fservice_5fresult_5fpublic_2eproto::TableStruct;
  friend void ::protobuf_register_5fservice_5fresult_5fpublic_2eproto::InitDefaultsRegisterServiceResultProtoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegisterServiceResultProto

// optional string service_host_id = 1;
inline bool RegisterServiceResultProto::has_service_host_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterServiceResultProto::set_has_service_host_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterServiceResultProto::clear_has_service_host_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterServiceResultProto::clear_service_host_id() {
  service_host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_host_id();
}
inline const ::std::string& RegisterServiceResultProto::service_host_id() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
  return service_host_id_.GetNoArena();
}
inline void RegisterServiceResultProto::set_service_host_id(const ::std::string& value) {
  set_has_service_host_id();
  service_host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
}
#if LANG_CXX11
inline void RegisterServiceResultProto::set_service_host_id(::std::string&& value) {
  set_has_service_host_id();
  service_host_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
}
#endif
inline void RegisterServiceResultProto::set_service_host_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_service_host_id();
  service_host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
}
inline void RegisterServiceResultProto::set_service_host_id(const char* value, size_t size) {
  set_has_service_host_id();
  service_host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
}
inline ::std::string* RegisterServiceResultProto::mutable_service_host_id() {
  set_has_service_host_id();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
  return service_host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterServiceResultProto::release_service_host_id() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
  clear_has_service_host_id();
  return service_host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterServiceResultProto::set_allocated_service_host_id(::std::string* service_host_id) {
  if (service_host_id != NULL) {
    set_has_service_host_id();
  } else {
    clear_has_service_host_id();
  }
  service_host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_host_id);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.protobuf.RegisterServiceResultProto.service_host_id)
}

// optional .fnv.soa.framework.protobuf.RegisterServiceResultProto.ActionStatus status = 2;
inline bool RegisterServiceResultProto::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterServiceResultProto::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterServiceResultProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterServiceResultProto::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus RegisterServiceResultProto::status() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.protobuf.RegisterServiceResultProto.status)
  return static_cast< ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus >(status_);
}
inline void RegisterServiceResultProto::set_status(::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus value) {
  assert(::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.framework.protobuf.RegisterServiceResultProto.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace framework
}  // namespace soa
}  // namespace fnv

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus>() {
  return ::fnv::soa::framework::protobuf::RegisterServiceResultProto_ActionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_register_5fservice_5fresult_5fpublic_2eproto__INCLUDED
