/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: soa_context.proto */

#ifndef PROTOBUF_C_soa_5fcontext_2eproto__INCLUDED
#define PROTOBUF_C_soa_5fcontext_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Fnv__Soa__Framework__SoaContext Fnv__Soa__Framework__SoaContext;


/* --- enums --- */


/* --- messages --- */

/*
 **
 * @fnv_proto
 * Contains SOA context data needed for SOA framework layer communication
 * piggy backed on user SOA messages.
 * These fields are not added or accessed by users.
 * The intended use for this field as part of the SoaMessage class 
 * is for user initiated requests and responses within SOA features that
 * require special data to operate.
 * First uses of this context data includes extra fields used for the 
 * on-demand broadcast feature.
 * @fnv_topic all topics
 * @fnv_scope ECG_INTERNAL
 * @fnv_api_source INTERNAL
 * @fnv_message_version 1.0
 */
struct  _Fnv__Soa__Framework__SoaContext
{
  ProtobufCMessage base;
  /*
   * Is the carrier SoaMessage empty, i.e. no data of it's own
   */
  protobuf_c_boolean has_emptycarrier;
  protobuf_c_boolean emptycarrier;
  /*
   * MQTT Client ID of client. Identifies the connection used.
   */
  char *clientid;
  /*
   * Consumer's raw endpoint. This is not the response endpoint
   */
  char *consumerbaseendpoint;
  /*
   * Service Provider's endpoint - used internally, may differ from SoaMessage field
   */
  char *providerendpoint;
  /*
   * Data broadcast endpoint - used internally, may differ from SoaMessage field
   */
  char *dataendpoint;
  /*
   * SoaHandle - included only as part of the context for asynchronous calls
   */
  protobuf_c_boolean has_soahandle;
  int64_t soahandle;
  /*
   * SOA Framework internal command
   */
  protobuf_c_boolean has_soacommand;
  int32_t soacommand;
  /*
   * SOA Framework internal transaction id
   */
  char *soatransactionid;
  /*
   * SOA Framework version
   */
  char *soaversion;
  /*
   * ECU ID
   */
  char *ecuid;
  /*
   * Process Id on the ECU
   */
  protobuf_c_boolean has_processid;
  int32_t processid;
};
#define FNV__SOA__FRAMEWORK__SOA_CONTEXT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fnv__soa__framework__soa_context__descriptor) \
    , 0, 0, NULL, NULL, NULL, NULL, 0, 0, 0, 0, NULL, NULL, NULL, 0, -1 }


/* Fnv__Soa__Framework__SoaContext methods */
void   fnv__soa__framework__soa_context__init
                     (Fnv__Soa__Framework__SoaContext         *message);
size_t fnv__soa__framework__soa_context__get_packed_size
                     (const Fnv__Soa__Framework__SoaContext   *message);
size_t fnv__soa__framework__soa_context__pack
                     (const Fnv__Soa__Framework__SoaContext   *message,
                      uint8_t             *out);
size_t fnv__soa__framework__soa_context__pack_to_buffer
                     (const Fnv__Soa__Framework__SoaContext   *message,
                      ProtobufCBuffer     *buffer);
Fnv__Soa__Framework__SoaContext *
       fnv__soa__framework__soa_context__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fnv__soa__framework__soa_context__free_unpacked
                     (Fnv__Soa__Framework__SoaContext *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fnv__Soa__Framework__SoaContext_Closure)
                 (const Fnv__Soa__Framework__SoaContext *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fnv__soa__framework__soa_context__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_soa_5fcontext_2eproto__INCLUDED */
