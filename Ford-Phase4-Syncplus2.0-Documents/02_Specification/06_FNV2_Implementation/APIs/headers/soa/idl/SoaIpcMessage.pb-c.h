/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: SoaIpcMessage.proto */

#ifndef PROTOBUF_C_SoaIpcMessage_2eproto__INCLUDED
#define PROTOBUF_C_SoaIpcMessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "SoaIpcConnectionOptions.pb-c.h"
#include "SoaMessageWrapper.pb-c.h"

typedef struct _Fnv__Soa__Gateway__SoaIpcMessage Fnv__Soa__Gateway__SoaIpcMessage;


/* --- enums --- */

/*
 * Commands that can be sent via this protobuf
 * ### If adding new enums, DO NOT change exiting values under any circumstances
 * ### Just to be safe with respect to potential different versions of GW and clients
 */
typedef enum _Fnv__Soa__Gateway__SoaIpcMessage__CommandType {
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__PUBLISH = 0,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__SUBSCRIBE = 1,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__UNSUBSCRIBE = 2,
  /*
   * Used to trigger Gateway connect to- or disconnect from Broker
   */
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__CONNECT = 3,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__DISCONNECT = 4,
  /*
   * Used by the Gateway when Data are received
   */
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__DATA = 5,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__INVALID = 6,
  /*
   * Used when MQTT connection is lost
   */
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__CONNECTIONLOST = 7,
  /*
   * Used to regsiter to- or deregister from Gateway only 
   */
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__REGISTER_GW = 8,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__DEREGISTER_GW = 9,
  FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__CONNECTREQUEST = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE)
} Fnv__Soa__Gateway__SoaIpcMessage__CommandType;

/* --- messages --- */

/*
 **
 * @fnv_proto
 * Base message structure to communicate back and forth between SOA Gateway and client 
 * @fnv_topic This GPB is used over the IPC interface and does not use SOA messaging
 * @fnv_scope ECG_INTERNAL
 * @fnv_api_source INTERNAL
 * @fnv_message_version 1.0
 */
struct  _Fnv__Soa__Gateway__SoaIpcMessage
{
  ProtobufCMessage base;
  /*
   * The command to transfer over IPC (e.g. publish)
   */
  Fnv__Soa__Gateway__SoaIpcMessage__CommandType command;
  /*
   * Service endpoint. The endpoint to be used by consumers to deliver service requests.
   */
  char *endpoint;
  /*
   * SOA Message
   */
  Fnv__Soa__Gateway__SoaMessageWrapper *soamessagewrapper;
  /*
   * connection options.
   */
  Fnv__Soa__Gateway__SoaIpcConnectionOptions *connectionoptions;
  /*
   * Client uid.
   */
  char *uid;
  /*
   * Client pid
   */
  protobuf_c_boolean has_pid;
  int32_t pid;
  /*
   * ipc correlation Id use as a message Id
   */
  protobuf_c_boolean has_msgid;
  int32_t msgid;
};
#define FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fnv__soa__gateway__soa_ipc_message__descriptor) \
    , FNV__SOA__GATEWAY__SOA_IPC_MESSAGE__COMMAND_TYPE__PUBLISH, NULL, NULL, NULL, NULL, 0, 0, 0, 0 }


/* Fnv__Soa__Gateway__SoaIpcMessage methods */
void   fnv__soa__gateway__soa_ipc_message__init
                     (Fnv__Soa__Gateway__SoaIpcMessage         *message);
size_t fnv__soa__gateway__soa_ipc_message__get_packed_size
                     (const Fnv__Soa__Gateway__SoaIpcMessage   *message);
size_t fnv__soa__gateway__soa_ipc_message__pack
                     (const Fnv__Soa__Gateway__SoaIpcMessage   *message,
                      uint8_t             *out);
size_t fnv__soa__gateway__soa_ipc_message__pack_to_buffer
                     (const Fnv__Soa__Gateway__SoaIpcMessage   *message,
                      ProtobufCBuffer     *buffer);
Fnv__Soa__Gateway__SoaIpcMessage *
       fnv__soa__gateway__soa_ipc_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fnv__soa__gateway__soa_ipc_message__free_unpacked
                     (Fnv__Soa__Gateway__SoaIpcMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Fnv__Soa__Gateway__SoaIpcMessage_Closure)
                 (const Fnv__Soa__Gateway__SoaIpcMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fnv__soa__gateway__soa_ipc_message__descriptor;
extern const ProtobufCEnumDescriptor    fnv__soa__gateway__soa_ipc_message__command_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_SoaIpcMessage_2eproto__INCLUDED */
