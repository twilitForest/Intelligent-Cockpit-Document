// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: soa_context.proto

#ifndef PROTOBUF_soa_5fcontext_2eproto__INCLUDED
#define PROTOBUF_soa_5fcontext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_soa_5fcontext_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSoaContextImpl();
void InitDefaultsSoaContext();
inline void InitDefaults() {
  InitDefaultsSoaContext();
}
}  // namespace protobuf_soa_5fcontext_2eproto
namespace fnv {
namespace soa {
namespace framework {
class SoaContext;
class SoaContextDefaultTypeInternal;
extern SoaContextDefaultTypeInternal _SoaContext_default_instance_;
}  // namespace framework
}  // namespace soa
}  // namespace fnv
namespace fnv {
namespace soa {
namespace framework {

// ===================================================================

class SoaContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fnv.soa.framework.SoaContext) */ {
 public:
  SoaContext();
  virtual ~SoaContext();

  SoaContext(const SoaContext& from);

  inline SoaContext& operator=(const SoaContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SoaContext(SoaContext&& from) noexcept
    : SoaContext() {
    *this = ::std::move(from);
  }

  inline SoaContext& operator=(SoaContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoaContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SoaContext* internal_default_instance() {
    return reinterpret_cast<const SoaContext*>(
               &_SoaContext_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SoaContext* other);
  friend void swap(SoaContext& a, SoaContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SoaContext* New() const PROTOBUF_FINAL { return New(NULL); }

  SoaContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoaContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string clientid = 101;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientidFieldNumber = 101;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // optional string consumerbaseendpoint = 102;
  bool has_consumerbaseendpoint() const;
  void clear_consumerbaseendpoint();
  static const int kConsumerbaseendpointFieldNumber = 102;
  const ::std::string& consumerbaseendpoint() const;
  void set_consumerbaseendpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_consumerbaseendpoint(::std::string&& value);
  #endif
  void set_consumerbaseendpoint(const char* value);
  void set_consumerbaseendpoint(const char* value, size_t size);
  ::std::string* mutable_consumerbaseendpoint();
  ::std::string* release_consumerbaseendpoint();
  void set_allocated_consumerbaseendpoint(::std::string* consumerbaseendpoint);

  // optional string providerendpoint = 103;
  bool has_providerendpoint() const;
  void clear_providerendpoint();
  static const int kProviderendpointFieldNumber = 103;
  const ::std::string& providerendpoint() const;
  void set_providerendpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_providerendpoint(::std::string&& value);
  #endif
  void set_providerendpoint(const char* value);
  void set_providerendpoint(const char* value, size_t size);
  ::std::string* mutable_providerendpoint();
  ::std::string* release_providerendpoint();
  void set_allocated_providerendpoint(::std::string* providerendpoint);

  // optional string dataendpoint = 104;
  bool has_dataendpoint() const;
  void clear_dataendpoint();
  static const int kDataendpointFieldNumber = 104;
  const ::std::string& dataendpoint() const;
  void set_dataendpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_dataendpoint(::std::string&& value);
  #endif
  void set_dataendpoint(const char* value);
  void set_dataendpoint(const char* value, size_t size);
  ::std::string* mutable_dataendpoint();
  ::std::string* release_dataendpoint();
  void set_allocated_dataendpoint(::std::string* dataendpoint);

  // optional string soatransactionid = 107;
  bool has_soatransactionid() const;
  void clear_soatransactionid();
  static const int kSoatransactionidFieldNumber = 107;
  const ::std::string& soatransactionid() const;
  void set_soatransactionid(const ::std::string& value);
  #if LANG_CXX11
  void set_soatransactionid(::std::string&& value);
  #endif
  void set_soatransactionid(const char* value);
  void set_soatransactionid(const char* value, size_t size);
  ::std::string* mutable_soatransactionid();
  ::std::string* release_soatransactionid();
  void set_allocated_soatransactionid(::std::string* soatransactionid);

  // optional string soaversion = 108;
  bool has_soaversion() const;
  void clear_soaversion();
  static const int kSoaversionFieldNumber = 108;
  const ::std::string& soaversion() const;
  void set_soaversion(const ::std::string& value);
  #if LANG_CXX11
  void set_soaversion(::std::string&& value);
  #endif
  void set_soaversion(const char* value);
  void set_soaversion(const char* value, size_t size);
  ::std::string* mutable_soaversion();
  ::std::string* release_soaversion();
  void set_allocated_soaversion(::std::string* soaversion);

  // optional string ecuid = 109;
  bool has_ecuid() const;
  void clear_ecuid();
  static const int kEcuidFieldNumber = 109;
  const ::std::string& ecuid() const;
  void set_ecuid(const ::std::string& value);
  #if LANG_CXX11
  void set_ecuid(::std::string&& value);
  #endif
  void set_ecuid(const char* value);
  void set_ecuid(const char* value, size_t size);
  ::std::string* mutable_ecuid();
  ::std::string* release_ecuid();
  void set_allocated_ecuid(::std::string* ecuid);

  // optional bool emptycarrier = 100;
  bool has_emptycarrier() const;
  void clear_emptycarrier();
  static const int kEmptycarrierFieldNumber = 100;
  bool emptycarrier() const;
  void set_emptycarrier(bool value);

  // optional int32 soacommand = 106;
  bool has_soacommand() const;
  void clear_soacommand();
  static const int kSoacommandFieldNumber = 106;
  ::google::protobuf::int32 soacommand() const;
  void set_soacommand(::google::protobuf::int32 value);

  // optional int64 soahandle = 105;
  bool has_soahandle() const;
  void clear_soahandle();
  static const int kSoahandleFieldNumber = 105;
  ::google::protobuf::int64 soahandle() const;
  void set_soahandle(::google::protobuf::int64 value);

  // optional int32 processID = 110 [default = -1];
  bool has_processid() const;
  void clear_processid();
  static const int kProcessIDFieldNumber = 110;
  ::google::protobuf::int32 processid() const;
  void set_processid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fnv.soa.framework.SoaContext)
 private:
  void set_has_emptycarrier();
  void clear_has_emptycarrier();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_consumerbaseendpoint();
  void clear_has_consumerbaseendpoint();
  void set_has_providerendpoint();
  void clear_has_providerendpoint();
  void set_has_dataendpoint();
  void clear_has_dataendpoint();
  void set_has_soahandle();
  void clear_has_soahandle();
  void set_has_soacommand();
  void clear_has_soacommand();
  void set_has_soatransactionid();
  void clear_has_soatransactionid();
  void set_has_soaversion();
  void clear_has_soaversion();
  void set_has_ecuid();
  void clear_has_ecuid();
  void set_has_processid();
  void clear_has_processid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr consumerbaseendpoint_;
  ::google::protobuf::internal::ArenaStringPtr providerendpoint_;
  ::google::protobuf::internal::ArenaStringPtr dataendpoint_;
  ::google::protobuf::internal::ArenaStringPtr soatransactionid_;
  ::google::protobuf::internal::ArenaStringPtr soaversion_;
  ::google::protobuf::internal::ArenaStringPtr ecuid_;
  bool emptycarrier_;
  ::google::protobuf::int32 soacommand_;
  ::google::protobuf::int64 soahandle_;
  ::google::protobuf::int32 processid_;
  friend struct ::protobuf_soa_5fcontext_2eproto::TableStruct;
  friend void ::protobuf_soa_5fcontext_2eproto::InitDefaultsSoaContextImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SoaContext

// optional bool emptycarrier = 100;
inline bool SoaContext::has_emptycarrier() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SoaContext::set_has_emptycarrier() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SoaContext::clear_has_emptycarrier() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SoaContext::clear_emptycarrier() {
  emptycarrier_ = false;
  clear_has_emptycarrier();
}
inline bool SoaContext::emptycarrier() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.emptycarrier)
  return emptycarrier_;
}
inline void SoaContext::set_emptycarrier(bool value) {
  set_has_emptycarrier();
  emptycarrier_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.emptycarrier)
}

// optional string clientid = 101;
inline bool SoaContext::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoaContext::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoaContext::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoaContext::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& SoaContext::clientid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.clientid)
  return clientid_.GetNoArena();
}
inline void SoaContext::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.clientid)
}
#if LANG_CXX11
inline void SoaContext::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.clientid)
}
#endif
inline void SoaContext::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.clientid)
}
inline void SoaContext::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.clientid)
}
inline ::std::string* SoaContext::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.clientid)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_clientid() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.clientid)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.clientid)
}

// optional string consumerbaseendpoint = 102;
inline bool SoaContext::has_consumerbaseendpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoaContext::set_has_consumerbaseendpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoaContext::clear_has_consumerbaseendpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoaContext::clear_consumerbaseendpoint() {
  consumerbaseendpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_consumerbaseendpoint();
}
inline const ::std::string& SoaContext::consumerbaseendpoint() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.consumerbaseendpoint)
  return consumerbaseendpoint_.GetNoArena();
}
inline void SoaContext::set_consumerbaseendpoint(const ::std::string& value) {
  set_has_consumerbaseendpoint();
  consumerbaseendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.consumerbaseendpoint)
}
#if LANG_CXX11
inline void SoaContext::set_consumerbaseendpoint(::std::string&& value) {
  set_has_consumerbaseendpoint();
  consumerbaseendpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.consumerbaseendpoint)
}
#endif
inline void SoaContext::set_consumerbaseendpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_consumerbaseendpoint();
  consumerbaseendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.consumerbaseendpoint)
}
inline void SoaContext::set_consumerbaseendpoint(const char* value, size_t size) {
  set_has_consumerbaseendpoint();
  consumerbaseendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.consumerbaseendpoint)
}
inline ::std::string* SoaContext::mutable_consumerbaseendpoint() {
  set_has_consumerbaseendpoint();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.consumerbaseendpoint)
  return consumerbaseendpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_consumerbaseendpoint() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.consumerbaseendpoint)
  clear_has_consumerbaseendpoint();
  return consumerbaseendpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_consumerbaseendpoint(::std::string* consumerbaseendpoint) {
  if (consumerbaseendpoint != NULL) {
    set_has_consumerbaseendpoint();
  } else {
    clear_has_consumerbaseendpoint();
  }
  consumerbaseendpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consumerbaseendpoint);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.consumerbaseendpoint)
}

// optional string providerendpoint = 103;
inline bool SoaContext::has_providerendpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoaContext::set_has_providerendpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoaContext::clear_has_providerendpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoaContext::clear_providerendpoint() {
  providerendpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_providerendpoint();
}
inline const ::std::string& SoaContext::providerendpoint() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.providerendpoint)
  return providerendpoint_.GetNoArena();
}
inline void SoaContext::set_providerendpoint(const ::std::string& value) {
  set_has_providerendpoint();
  providerendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.providerendpoint)
}
#if LANG_CXX11
inline void SoaContext::set_providerendpoint(::std::string&& value) {
  set_has_providerendpoint();
  providerendpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.providerendpoint)
}
#endif
inline void SoaContext::set_providerendpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_providerendpoint();
  providerendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.providerendpoint)
}
inline void SoaContext::set_providerendpoint(const char* value, size_t size) {
  set_has_providerendpoint();
  providerendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.providerendpoint)
}
inline ::std::string* SoaContext::mutable_providerendpoint() {
  set_has_providerendpoint();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.providerendpoint)
  return providerendpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_providerendpoint() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.providerendpoint)
  clear_has_providerendpoint();
  return providerendpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_providerendpoint(::std::string* providerendpoint) {
  if (providerendpoint != NULL) {
    set_has_providerendpoint();
  } else {
    clear_has_providerendpoint();
  }
  providerendpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), providerendpoint);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.providerendpoint)
}

// optional string dataendpoint = 104;
inline bool SoaContext::has_dataendpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoaContext::set_has_dataendpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoaContext::clear_has_dataendpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoaContext::clear_dataendpoint() {
  dataendpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataendpoint();
}
inline const ::std::string& SoaContext::dataendpoint() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.dataendpoint)
  return dataendpoint_.GetNoArena();
}
inline void SoaContext::set_dataendpoint(const ::std::string& value) {
  set_has_dataendpoint();
  dataendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.dataendpoint)
}
#if LANG_CXX11
inline void SoaContext::set_dataendpoint(::std::string&& value) {
  set_has_dataendpoint();
  dataendpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.dataendpoint)
}
#endif
inline void SoaContext::set_dataendpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dataendpoint();
  dataendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.dataendpoint)
}
inline void SoaContext::set_dataendpoint(const char* value, size_t size) {
  set_has_dataendpoint();
  dataendpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.dataendpoint)
}
inline ::std::string* SoaContext::mutable_dataendpoint() {
  set_has_dataendpoint();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.dataendpoint)
  return dataendpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_dataendpoint() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.dataendpoint)
  clear_has_dataendpoint();
  return dataendpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_dataendpoint(::std::string* dataendpoint) {
  if (dataendpoint != NULL) {
    set_has_dataendpoint();
  } else {
    clear_has_dataendpoint();
  }
  dataendpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataendpoint);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.dataendpoint)
}

// optional int64 soahandle = 105;
inline bool SoaContext::has_soahandle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SoaContext::set_has_soahandle() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SoaContext::clear_has_soahandle() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SoaContext::clear_soahandle() {
  soahandle_ = GOOGLE_LONGLONG(0);
  clear_has_soahandle();
}
inline ::google::protobuf::int64 SoaContext::soahandle() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.soahandle)
  return soahandle_;
}
inline void SoaContext::set_soahandle(::google::protobuf::int64 value) {
  set_has_soahandle();
  soahandle_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.soahandle)
}

// optional int32 soacommand = 106;
inline bool SoaContext::has_soacommand() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SoaContext::set_has_soacommand() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SoaContext::clear_has_soacommand() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SoaContext::clear_soacommand() {
  soacommand_ = 0;
  clear_has_soacommand();
}
inline ::google::protobuf::int32 SoaContext::soacommand() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.soacommand)
  return soacommand_;
}
inline void SoaContext::set_soacommand(::google::protobuf::int32 value) {
  set_has_soacommand();
  soacommand_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.soacommand)
}

// optional string soatransactionid = 107;
inline bool SoaContext::has_soatransactionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoaContext::set_has_soatransactionid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoaContext::clear_has_soatransactionid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoaContext::clear_soatransactionid() {
  soatransactionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_soatransactionid();
}
inline const ::std::string& SoaContext::soatransactionid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.soatransactionid)
  return soatransactionid_.GetNoArena();
}
inline void SoaContext::set_soatransactionid(const ::std::string& value) {
  set_has_soatransactionid();
  soatransactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.soatransactionid)
}
#if LANG_CXX11
inline void SoaContext::set_soatransactionid(::std::string&& value) {
  set_has_soatransactionid();
  soatransactionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.soatransactionid)
}
#endif
inline void SoaContext::set_soatransactionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_soatransactionid();
  soatransactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.soatransactionid)
}
inline void SoaContext::set_soatransactionid(const char* value, size_t size) {
  set_has_soatransactionid();
  soatransactionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.soatransactionid)
}
inline ::std::string* SoaContext::mutable_soatransactionid() {
  set_has_soatransactionid();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.soatransactionid)
  return soatransactionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_soatransactionid() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.soatransactionid)
  clear_has_soatransactionid();
  return soatransactionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_soatransactionid(::std::string* soatransactionid) {
  if (soatransactionid != NULL) {
    set_has_soatransactionid();
  } else {
    clear_has_soatransactionid();
  }
  soatransactionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soatransactionid);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.soatransactionid)
}

// optional string soaversion = 108;
inline bool SoaContext::has_soaversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoaContext::set_has_soaversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoaContext::clear_has_soaversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoaContext::clear_soaversion() {
  soaversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_soaversion();
}
inline const ::std::string& SoaContext::soaversion() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.soaversion)
  return soaversion_.GetNoArena();
}
inline void SoaContext::set_soaversion(const ::std::string& value) {
  set_has_soaversion();
  soaversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.soaversion)
}
#if LANG_CXX11
inline void SoaContext::set_soaversion(::std::string&& value) {
  set_has_soaversion();
  soaversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.soaversion)
}
#endif
inline void SoaContext::set_soaversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_soaversion();
  soaversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.soaversion)
}
inline void SoaContext::set_soaversion(const char* value, size_t size) {
  set_has_soaversion();
  soaversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.soaversion)
}
inline ::std::string* SoaContext::mutable_soaversion() {
  set_has_soaversion();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.soaversion)
  return soaversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_soaversion() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.soaversion)
  clear_has_soaversion();
  return soaversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_soaversion(::std::string* soaversion) {
  if (soaversion != NULL) {
    set_has_soaversion();
  } else {
    clear_has_soaversion();
  }
  soaversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soaversion);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.soaversion)
}

// optional string ecuid = 109;
inline bool SoaContext::has_ecuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoaContext::set_has_ecuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoaContext::clear_has_ecuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoaContext::clear_ecuid() {
  ecuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ecuid();
}
inline const ::std::string& SoaContext::ecuid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.ecuid)
  return ecuid_.GetNoArena();
}
inline void SoaContext::set_ecuid(const ::std::string& value) {
  set_has_ecuid();
  ecuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.ecuid)
}
#if LANG_CXX11
inline void SoaContext::set_ecuid(::std::string&& value) {
  set_has_ecuid();
  ecuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fnv.soa.framework.SoaContext.ecuid)
}
#endif
inline void SoaContext::set_ecuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ecuid();
  ecuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fnv.soa.framework.SoaContext.ecuid)
}
inline void SoaContext::set_ecuid(const char* value, size_t size) {
  set_has_ecuid();
  ecuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fnv.soa.framework.SoaContext.ecuid)
}
inline ::std::string* SoaContext::mutable_ecuid() {
  set_has_ecuid();
  // @@protoc_insertion_point(field_mutable:fnv.soa.framework.SoaContext.ecuid)
  return ecuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoaContext::release_ecuid() {
  // @@protoc_insertion_point(field_release:fnv.soa.framework.SoaContext.ecuid)
  clear_has_ecuid();
  return ecuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoaContext::set_allocated_ecuid(::std::string* ecuid) {
  if (ecuid != NULL) {
    set_has_ecuid();
  } else {
    clear_has_ecuid();
  }
  ecuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ecuid);
  // @@protoc_insertion_point(field_set_allocated:fnv.soa.framework.SoaContext.ecuid)
}

// optional int32 processID = 110 [default = -1];
inline bool SoaContext::has_processid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SoaContext::set_has_processid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SoaContext::clear_has_processid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SoaContext::clear_processid() {
  processid_ = -1;
  clear_has_processid();
}
inline ::google::protobuf::int32 SoaContext::processid() const {
  // @@protoc_insertion_point(field_get:fnv.soa.framework.SoaContext.processID)
  return processid_;
}
inline void SoaContext::set_processid(::google::protobuf::int32 value) {
  set_has_processid();
  processid_ = value;
  // @@protoc_insertion_point(field_set:fnv.soa.framework.SoaContext.processID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace framework
}  // namespace soa
}  // namespace fnv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_soa_5fcontext_2eproto__INCLUDED
